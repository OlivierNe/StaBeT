@model AccountCreateVM

@{
    ViewBag.Title = "Nieuw account";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <h4>Rollen</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Admin, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Admin)
                    @Html.ValidationMessageFor(model => model.Admin, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Begeleider, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Begeleider)
                    @Html.ValidationMessageFor(model => model.Begeleider, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Student)
                    @Html.ValidationMessageFor(model => model.Student, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Bedrijf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Bedrijf)
                    @Html.ValidationMessageFor(model => model.Bedrijf, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" style="visibility: hidden">
            @Html.LabelFor(model => model.Wachtwoord, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Wachtwoord, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.Wachtwoord, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opslaan" class="btn btn-success" />
                @Html.ActionLink("Annuleren", "Index", new { }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Terug naar overzicht", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            $("#Bedrijf").change(function () {
                console.log("changed");
                if ($(this).is(":checked")) {
                    $("#Wachtwoord").css("visibility", "visible");
                } else {
                    $("#Wachtwoord").css("visibility", "hidden");
                }
            });


        })
    </script>

}
