@model StageopdrachtCreateVM
@{
    ViewBag.Title = "Nieuwe stageopdracht";
    var ajaxOptions = new AjaxOptions
    {
        HttpMethod = "GET",
        UpdateTargetId = "stagementorForm",
        InsertionMode = InsertionMode.Replace
    };
    var ajaxOptions2 = new AjaxOptions
    {
        HttpMethod = "GET",
        UpdateTargetId = "contractondertekenaarForm",
        InsertionMode = InsertionMode.Replace
    };
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Create", "Stageopdracht", FormMethod.Post, new { @id = "stageopdrachtForm" }))
{ @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <fieldset>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @if (User.IsInRole(Role.Admin))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.BedrijfId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.BedrijfId, Model.BedrijvenSelectList, "-- Selecteer een bedrijf --",
                        new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BedrijfId, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Titel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Titel, new { htmlAttributes = new { @class = "form-control", autofocus = "true" } })
                    @Html.ValidationMessageFor(model => model.Titel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Academiejaar, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Academiejaar, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Academiejaar, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Semester</label>
                <div class="col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.Semester1, new { htmlAttributes = new { @class = "" } })
                            Semester 1 @Html.DisplayFor(model => model.StageperiodeSem1)
                        </label>
                    </div>
                    <br />
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.Semester2, new { htmlAttributes = new { @class = "" } })
                            Semester 2 @Html.DisplayFor(model => model.StageperiodeSem2)
                        </label>
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.AantalStudenten, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AantalStudenten, Model.AantalStudentenSelectList,
                    new { @class = "form-control", @style = "max-width:80px" })
                    @Html.ValidationMessageFor(model => model.AantalStudenten, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <label>Stageplaats</label>
            <div class="form-group">
                @Html.LabelFor(model => model.Gemeente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Gemeente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Gemeente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Straat, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Straat, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Straat, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />
            <div class="form-group">
                @Html.LabelFor(model => model.SpecialisatieId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.SpecialisatieId, Model.SpecialisatieSelectList, "-- Selecteer een specialisatie --",
                    new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SpecialisatieId, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.Specialisatie, new { htmlAttributes = new { @class = "form-control", style = "display:none;" } })
                </div>
            </div>
            <div class="form-group">
                <div id="stagementorDropdown">
                    @Html.LabelFor(model => model.StagementorId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.StagementorId, Model.StagementorsSelectList, "-- Selecteer een stagementor --",
                        new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StagementorId, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(model => model.StagementorId, new { @id = "StagementorIdHidden" })
                    @Ajax.ActionLink("+", "Create", new { IsStagementor = true }, ajaxOptions,
                    new { @class = "btn btn-default", @id = "stagementorBtn", title = "Nieuwe Stagementor" })
                </div>
                <div id="stagementorForm" class="col-md-12">
                    @if (Model.Stagementor != null)
                    {
                        @Html.Partial("_CreateStagementorForm")
                    }
                </div>
            </div>
            <div class="form-group">
                <div id="ControndDropdown">
                    @Html.LabelFor(model => model.ContractondertekenaarId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.ContractondertekenaarId, Model.ContractondertekenaarsSelectList,
                        "-- Selecteer een contractondertekenaar --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ContractondertekenaarId, "", new { @class = "text-danger" })
                    </div>
                    @Html.HiddenFor(model => model.ContractondertekenaarId, new { @id = "ContractondertekenaarIdHidden" })
                    @Ajax.ActionLink("+", "Create", new { isContractondertekenaar = true }, ajaxOptions2,
                    new { @class = "btn btn-default", @id = "controndBtn", title = "Nieuwe Contractondertekenaar" })
                </div>
                <div id="contractondertekenaarForm" class="col-md-12">
                    @if (Model.Contractondertekenaar != null)
                    {
                        @Html.Partial("_CreateContractondertekenaarForm")
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Omschrijving, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Omschrijving, new { htmlAttributes = new { @class = "form-control", rows = 10 } })
                    @Html.ValidationMessageFor(model => model.Omschrijving, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Opslaan" class="btn btn-default" id="saveBtn" />
                </div>
            </div>
        </fieldset>
    </div>
}
<p>
    @Html.OverzichtActionLink()
</p>

@section styles
{
    <link href="~/Content/font-awesome.css" rel="stylesheet" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/stagetool-form.js"></script>
    <script src="~/Scripts/createStageForm.js"></script>
    <script src="~/Scripts/specialisatie.js"></script>
}
