@model StageopdrachtIndexVM

<div id="grid-tableDiv">
    @Html.Grid(Model.Stageopdrachten).Columns(columns =>
{


    columns.Add(so => so.Titel).Titled("Titel")
    .Encoded(false).Sanitized(false)
    .RenderValueAs(so =>
    {
        var parameters = Model.ActionParams!=null? new RouteValueDictionary(Model.ActionParams): new RouteValueDictionary();
        parameters.Add("id", so.Id);
        parameters.Add("overzicht", Model.OverzichtAction);
        return Html.ActionLink(so.Titel, "Details", parameters);
    });

    columns.Add(so => so.Specialisatie);
    columns.Add(so => so.Semester1).Titled("Semester")
        .RenderValueAs(so => so.Semester).Sortable(true).ThenSortBy(so => so.Semester2);
    columns.Add(so => so.AantalToegewezenStudenten).Titled("Aantal studenten").RenderValueAs(so => so.AantalToegewezenStudenten + "/" + so.AantalStudenten);
    if (User.IsInRole("bedrijf") == false)
    {
        columns.Add(so => so.Bedrijf.Naam).Titled("Bedrijf");
        columns.Add(so => so.Gemeente).Titled("Locatie");
    }
    if (User.IsInRole("admin") || User.IsInRole("begeleider"))
    {
        columns.Add().Titled("studenten")
            .Sanitized(false).Encoded(false)
            .RenderValueAs(so =>
            {
                string retVal = "<ul>";
                foreach (var student in so.Studenten)
                {
                    retVal += "<li>" + Html.ActionLink(student.Naam, "Details", "Student", new { id = student.Id }, new { }) + "</li>";
                }
                retVal += "</ul>";
                return retVal;
            }
            ).SetWidth(200);
    }
    if (User.IsInRole("admin"))
    {
        columns.Add(so => so.Status).Titled("Status").Sanitized(false).Encoded(false)
            .RenderValueAs(so => Html.DisplayFor(model => so.Status)).SetWidth(130);
        if (Model.ToonOordelen)
        {
            columns.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(so => so.Status != StageopdrachtStatus.Goedgekeurd
                    ? Html.ActionLink("Goedkeuren", "Goedkeuren", new { id = so.Id }) : MvcHtmlString.Empty);
            columns.Add().Sanitized(false).Encoded(false)
                .RenderValueAs(so => so.Status != StageopdrachtStatus.Afgekeurd
                    ? Html.ActionLink("Afkeuren", "Afkeuren", new { id = so.Id }) : MvcHtmlString.Empty);
        }
    }
}).WithPaging(10).Sortable().EmptyText("")
</div>
