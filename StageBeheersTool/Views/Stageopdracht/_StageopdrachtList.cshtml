@model StageopdrachtIndexVM

<div id="grid-tableDiv">
    @Html.Grid(Model.Stageopdrachten).Columns(columns =>
    {
        columns.Add(so => so.Titel).Titled("Titel")
            .Encoded(false).Sanitized(false)
            .RenderValueAs(so => Html.ActionLink(so.Titel, "Details", new { id = so.Id, overzicht = Model.OverzichtAction })).SetWidth(300);

        columns.Add(so => so.Specialisatie);
        columns.Add(so => so.Semester1).Titled("Semester")
            .RenderValueAs(so => so.Semester).Sortable(true).ThenSortBy(so => so.Semester2);
        columns.Add(so => so.AantalStudenten).Titled("Aantal studenten").RenderValueAs(so => so.AantalToegewezenStudenten + "/" + so.AantalStudenten);

        if (Model.ToonBedrijf)
        {
            columns.Add(so => so.Bedrijf.Naam).Titled("Bedrijf")
                .RenderValueAs(so => so.Bedrijf.Naam + (string.IsNullOrWhiteSpace(so.Gemeente) ? "" : (" - " + so.Gemeente)));
        }
        if (Model.ToonStudenten)
        {
            columns.Add().Titled("studenten")
                .Sanitized(false).Encoded(false)
                .RenderValueAs(so =>
                {
                    string retVal = "<ul>";
                    foreach (var student in so.Studenten)
                    {
                        retVal += "<li>" + Html.ActionLink(student.Student.Naam, "Details", "Student", new { id = student.Student.Id }, new { }) + "</li>";
                    }
                    retVal += "</ul>";
                    return retVal;
                }
                ).SetWidth(200);
        }
        if (Model.ToonStatus)
        {
            columns.Add(so => so.Status).Titled("Status").Sanitized(false).Encoded(false)
                .RenderValueAs(so => Html.DisplayFor(model => so.Status)).SetWidth(130);
            if (Model.ToonOordelen)
            {
                columns.Add().Sanitized(false).Encoded(false)
                    .RenderValueAs(so => so.Status != StageopdrachtStatus.Goedgekeurd
                        ? Html.ActionLink("Goedkeuren", "Goedkeuren", new { id = so.Id }) : MvcHtmlString.Empty);
                columns.Add().Sanitized(false).Encoded(false)
                    .RenderValueAs(so => so.Status != StageopdrachtStatus.Afgekeurd
                        ? Html.ActionLink("Afkeuren", "Afkeuren", new { id = so.Id }) : MvcHtmlString.Empty);
            }
        }
    }).WithPaging(10).Sortable().EmptyText("Geen stageopdrachten gevonden")
</div>
