//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace StageBeheersTool.be.hogent.webservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ldap.cfcSoapBinding", Namespace="http://webservice.hogent.be/ldap/ldap.cfc")]
    public partial class ldap_wrapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateAUGentOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAttributesByBarcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback accountInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback authenticateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ldap_wrapService() {
            this.Url = global::StageBeheersTool.Properties.Settings.Default.StageBeheersTool_be_hogent_webservice_ldap_wrapService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCheckCompletedEventHandler loginCheckCompleted;
        
        /// <remarks/>
        public event authenticateAUGentCompletedEventHandler authenticateAUGentCompleted;
        
        /// <remarks/>
        public event getAttributesByBarcodeCompletedEventHandler getAttributesByBarcodeCompleted;
        
        /// <remarks/>
        public event accountInfoCompletedEventHandler accountInfoCompleted;
        
        /// <remarks/>
        public event authenticateCompletedEventHandler authenticateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ldap", ResponseNamespace="http://webservice.hogent.be/ldap/ldap.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginCheckReturn")]
        public Map loginCheck(string account, string attributes) {
            object[] results = this.Invoke("loginCheck", new object[] {
                        account,
                        attributes});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void loginCheckAsync(string account, string attributes) {
            this.loginCheckAsync(account, attributes, null);
        }
        
        /// <remarks/>
        public void loginCheckAsync(string account, string attributes, object userState) {
            if ((this.loginCheckOperationCompleted == null)) {
                this.loginCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginCheckOperationCompleted);
            }
            this.InvokeAsync("loginCheck", new object[] {
                        account,
                        attributes}, this.loginCheckOperationCompleted, userState);
        }
        
        private void OnloginCheckOperationCompleted(object arg) {
            if ((this.loginCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCheckCompleted(this, new loginCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ldap", ResponseNamespace="http://webservice.hogent.be/ldap/ldap.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("authenticateAUGentReturn")]
        public Map authenticateAUGent(string account) {
            object[] results = this.Invoke("authenticateAUGent", new object[] {
                        account});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateAUGentAsync(string account) {
            this.authenticateAUGentAsync(account, null);
        }
        
        /// <remarks/>
        public void authenticateAUGentAsync(string account, object userState) {
            if ((this.authenticateAUGentOperationCompleted == null)) {
                this.authenticateAUGentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateAUGentOperationCompleted);
            }
            this.InvokeAsync("authenticateAUGent", new object[] {
                        account}, this.authenticateAUGentOperationCompleted, userState);
        }
        
        private void OnauthenticateAUGentOperationCompleted(object arg) {
            if ((this.authenticateAUGentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateAUGentCompleted(this, new authenticateAUGentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ldap", ResponseNamespace="http://webservice.hogent.be/ldap/ldap.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAttributesByBarcodeReturn")]
        public string getAttributesByBarcode(string barcode) {
            object[] results = this.Invoke("getAttributesByBarcode", new object[] {
                        barcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAttributesByBarcodeAsync(string barcode) {
            this.getAttributesByBarcodeAsync(barcode, null);
        }
        
        /// <remarks/>
        public void getAttributesByBarcodeAsync(string barcode, object userState) {
            if ((this.getAttributesByBarcodeOperationCompleted == null)) {
                this.getAttributesByBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttributesByBarcodeOperationCompleted);
            }
            this.InvokeAsync("getAttributesByBarcode", new object[] {
                        barcode}, this.getAttributesByBarcodeOperationCompleted, userState);
        }
        
        private void OngetAttributesByBarcodeOperationCompleted(object arg) {
            if ((this.getAttributesByBarcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttributesByBarcodeCompleted(this, new getAttributesByBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ldap", ResponseNamespace="http://webservice.hogent.be/ldap/ldap.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("accountInfoReturn")]
        public Map accountInfo(string hgIDencrypted, string userIDencrypted) {
            object[] results = this.Invoke("accountInfo", new object[] {
                        hgIDencrypted,
                        userIDencrypted});
            return ((Map)(results[0]));
        }
        
        /// <remarks/>
        public void accountInfoAsync(string hgIDencrypted, string userIDencrypted) {
            this.accountInfoAsync(hgIDencrypted, userIDencrypted, null);
        }
        
        /// <remarks/>
        public void accountInfoAsync(string hgIDencrypted, string userIDencrypted, object userState) {
            if ((this.accountInfoOperationCompleted == null)) {
                this.accountInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaccountInfoOperationCompleted);
            }
            this.InvokeAsync("accountInfo", new object[] {
                        hgIDencrypted,
                        userIDencrypted}, this.accountInfoOperationCompleted, userState);
        }
        
        private void OnaccountInfoOperationCompleted(object arg) {
            if ((this.accountInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.accountInfoCompleted(this, new accountInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://ldap", ResponseNamespace="http://webservice.hogent.be/ldap/ldap.cfc")]
        [return: System.Xml.Serialization.SoapElementAttribute("authenticateReturn")]
        public string authenticate(string user, string passwd) {
            object[] results = this.Invoke("authenticate", new object[] {
                        user,
                        passwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void authenticateAsync(string user, string passwd) {
            this.authenticateAsync(user, passwd, null);
        }
        
        /// <remarks/>
        public void authenticateAsync(string user, string passwd, object userState) {
            if ((this.authenticateOperationCompleted == null)) {
                this.authenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateOperationCompleted);
            }
            this.InvokeAsync("authenticate", new object[] {
                        user,
                        passwd}, this.authenticateOperationCompleted, userState);
        }
        
        private void OnauthenticateOperationCompleted(object arg) {
            if ((this.authenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateCompleted(this, new authenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class Map {
        
        private mapItem[] itemField;
        
        /// <remarks/>
        public mapItem[] item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xml.apache.org/xml-soap")]
    public partial class mapItem {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public object value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void loginCheckCompletedEventHandler(object sender, loginCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void authenticateAUGentCompletedEventHandler(object sender, authenticateAUGentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateAUGentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateAUGentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAttributesByBarcodeCompletedEventHandler(object sender, getAttributesByBarcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttributesByBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAttributesByBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void accountInfoCompletedEventHandler(object sender, accountInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class accountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal accountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Map Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Map)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void authenticateCompletedEventHandler(object sender, authenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal authenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591